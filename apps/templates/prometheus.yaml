# yaml-language-server: $schema=https://raw.githubusercontent.com/prometheus-community/helm-charts/ef068710d1c6182e1d8f15eabe6c83911c6a0114/charts/prometheus/values.schema.json
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-data
  namespace: argocd
  labels:
    instance: prometheus
    app: prometheus
    chart: prometheus
    release: prometheus
spec:
  storageClassName: "nfs-client"
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /rpool/home-cluster/prometheus-data
    server: 10.1.1.99
    readOnly: false
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/prometheus-community/helm-charts/ef068710d1c6182e1d8f15eabe6c83911c6a0114/charts/prometheus/values.schema.json
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
spec:
  storageClassName: "nfs-client"
  volumeName: prometheus-data
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 8Gi
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/prometheus-community/helm-charts/ef068710d1c6182e1d8f15eabe6c83911c6a0114/charts/prometheus/values.schema.json
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: "{{ .Values.spec.destination.server }}"
  project: default
  source:
    path: ""
    repoURL: "https://prometheus-community.github.io/helm-charts/"
    targetRevision: "25.22.0"
    chart: prometheus
    helm:
      parameters:
        - name: server.ingress.enabled
          value: "true"
        - name: server.ingress.annotations.kubernetes\.io/ingress\.class
          value: "traefik"
        - name: server.ingress.annotations.cert-manager\.io/cluster-issuer
          value: "letsencrypt-prod"
        - name: server.ingress.hosts[0]
          value: "prometheus.picturo.us"
        - name: server.ingress.tls[0].secretName
          value: "prometheus-tls"
        - name: server.ingress.tls[0].hosts[0]
          value: "prometheus.picturo.us"
        - name: server.persistentVolume.enabled
          value: "true"
        - name: server.persistentVolume.existingClaim
          value: "prometheus-data"
        - name: prometheus-node-exporter.hostNetwork
          value: "false"
        - name: extraScrapeConfigs
          value: |
            - job_name: 'traefik'
              metrics_path: '/metrics'
              static_configs:
                - targets: ['traefik:8080']
            - job_name: 'gpu-metrics'
              scrape_interval: 1s
              metrics_path: '/metrics'
              scheme: http
              kubernetes_sd_configs:
              - role: endpoints
                namespaces:
                  names:
                  - argocd
              relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                action: drop
                regex: .*-node-feature-discovery-master
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_node
            - job_name: 'jellyfin'
              metrics_path: '/metrics'
              static_configs:
                - targets: ['jellyfin-tcp:8096']
              scheme: https
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true